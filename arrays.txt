#include<iostream>
using namespace std;
int main() {
	
	system("color 2f");
	//Sheet 3 -- Array and data structures


	// problem one Replacement
	/*int list[100];
	int num;
	cout << "Enter number of integers : " << endl;
	cin >> num;
	for (int i = 0; i < num; i++) {
		cin >> list[i];
	}
	for (int i = 0; i < num; i++) {
		if (list[i] > 0) {
			cout << 1 << " ";
		}
		else if (list[i] < 0) {
			cout << 2 << " ";
		}
		else {
			cout << 0 << " ";
		}
	}
	cout << endl;
	*/

	//Positions in array - print all array positions that store a number less or equal to 10 
	/*int n;
	int list[100];
	cout << "Enter count of numbers in list : " << endl;
	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> list[i];
	}


	for (int i = 0; i < n; i++) {
		if (list[i] <= 10) {
			cout << "position of : " << i << endl;
		}
		else
			continue;
	}

	cout << endl;
	*/

	// searching for a number in array if exits print its position else print -1
	/*int num, n, flag = 0;
	cout << "Enter number of numbers in array : " << endl;
	cin >> n;
	cout << "Enter number you are searching for : " << endl;
	cin >> num;
	int list[1000];
	for (int i = 0; i < n; i++) {
		cin >> list[i];
	}

	for (int i = 0; i < n; i++) {
		if (list[i] == num) {
			cout << "index  =  " <<i << endl;
			flag = 1;
			break;
		}
		else {
			continue;
		}
			
	}

	if (flag == 0) {
		cout << -1 << endl;
	}
	*/

	//sorting an array
	/*int list[100], n, temp = 0;
	cout << "Enter size of array : " << endl;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> list[i];
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (list[i] > list[j]) {
				temp = list[j];
				list[j] = list[i];
				list[i] = temp;
			}
		}
	}

	for (int i = 0; i < n; i++) {
		cout << list[i] << " ";
	}
	cout << endl;
	*/

	//Smallest Pair
	/*int list[100], n, temp = 0;
	cout << "Enter the size of array : " << endl;
	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> list[i];
	}

	temp = list[0] + list[1];
	for (int i = 1; i < n-1; i++) {
		if (list[i] + list[i + 1] < temp) {
			temp = list[i] + list[i + 1];
		}
	}

	cout << temp << endl;
	*/

	// the frequency of minimum element is odd or not
	/*int size, temp = 0, list[100];
	cout << "Enter the size of array : " << endl;
	cin >> size;

	for (int i = 0; i < size; i++) {
		cin >> list[i];
	}

	for (int i = 0; i < size; i++) {
		if (list[i] < list[i+1]) {
			temp = list[i];
			list[i + 1] = list[i];
			list[i] = temp;
		}
	}

	if (temp % 2 == 0) {
		cout << "Not Lucky" << endl;
	}
	else
		cout << "Lucky" << endl;
	*/
	
	//subarray
	/*for (int i = 1; i <= 5; i++) {
		for (int j = 1; j <= 5; j++) {
			if (j >= i) {
				cout << j << " ";
			}
		}
		cout << "  ";
	}
	cout << "\n";
	*/

	//Fibonanci seriec take the number and find the index or order
	/*int n, num1 = 0, temp = 1, target = 1, index = 0;
	cout << "Enter the number in seriec please : " << endl;
	cin >> n;
	if (n == 0) {
		cout << 0 << endl;
	}
	else
	{
		while (target != n) {
			target = (temp + num1);
			num1 = temp;
			temp = target;
			index++;
		}
	}
	cout << index << endl;
	*/

	//minimize numbers
	/*int n, list[100], target = 2, count = 0;
	cout << "Enter number of numbers : " << endl;
	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> list[i];
	}

	while (target == 2) {
		for (int i = 0; i < n; i++) {
			if (list[i] % 2 != 0) {
				target = 1;
				break;
			}
			else {
				list[i] /= 2;
				cout << "list = " << list[i] << endl;
			}
		}
		if(target == 2)
			count++;
	}
	

	cout << count << endl;
	*/

	//square matrix of size N * N , calculate the absolute difference between the sums of its diagonals (primary diagonal and secondary diagonal)
	/*int list[100][100], n, primary_sum = 0, secondary_sum = 0;
	cout << "Enter the num of rows : " << endl;
	cin >> n;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> list[i][j];
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (i == j) {
				primary_sum += (list[i][j]);
			}
			else if (i + j == n-1) {
				secondary_sum += list[i][j];
			}
			else
				continue;
		}
	}

	int difference = primary_sum - secondary_sum;
	if (difference < 0) {
		cout << "Difference = " << difference * -1 << endl;
	}
	else
		cout << "Difference = " << difference << endl;
	
	*/










	system("pause");
	return 0;
}